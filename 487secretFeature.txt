Design Plan for Secret Feature

For our secret feature to implement, we chose A) Invert screen for the final boss attack. 
There are multiple design impacts. First, we must consider how the invert will be triggered. Since it's supposed to trigger for the final boss attack, our idea is to create a boolean variable isGameInverted in the GameState class. This boolean will be set to false in the beginning, and once the wave variable is set to match the final boss attack, then in the update function of the GameState, isGameInverted will be set to true. Inside of the Draw function for the GameState, isGameInverted will be passed to each Draw function that is called. For each class that calls Draw in the GameState.Draw function: Enemy, Reward, and Player, this boolean will be passed in. Each Draw class will need to be updated to accept this boolean. In the Draw functions for these classes, an if-statement inside the Draw function will change depending on this boolean. The Draw functions will implement the inverting of the screen by changing the values for where the sprites are drawn on the screen. These are currently vector values that will need to be reversed.

The Component class's Draw function will need to be updated to add the boolean, as well as all the classes that inherit from this. Currently implemented patterns do not need to be changed for this to be implemented because of the low coupling and cohesion we have worked to implement in our application. If further in implementation, we decide to implement a pattern to help for this, we might consider the Observer pattern which can keep track of the implemented objects drawn on the screen and tell them when isGameInverted is set to true.